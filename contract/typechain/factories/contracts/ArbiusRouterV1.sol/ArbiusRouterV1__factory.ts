/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ArbiusRouterV1,
  ArbiusRouterV1Interface,
} from "../../../contracts/ArbiusRouterV1.sol/ArbiusRouterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "engine_",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbius_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidator",
    type: "error",
  },
  {
    inputs: [],
    name: "SignersNotSorted",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minValidators",
        type: "uint256",
      },
    ],
    name: "MinValidatorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ValidatorSet",
    type: "event",
  },
  {
    inputs: [],
    name: "arbius",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
    ],
    name: "claimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "contract IArbius",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "incentives",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minValidators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minValidators_",
        type: "uint256",
      },
    ],
    name: "setMinValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
    ],
    name: "submitTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
    ],
    name: "submitTaskWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060409080825234620001af57606081620014eb8038038091620000258285620001b4565b833981010312620001af576200003b81620001ee565b602090620000588462000050848601620001ee565b9401620001ee565b60008054336001600160a01b0319808316821784558851939794959094936001600160a01b039390928492839283929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08d80a3169485876001541617600155169586866002541617600255168094600354161760035563095ea7b360e01b92838252600482015285816044818a600019998a60248401525af18015620001a55760449287959492899262000183575b5060025416895196879586948552600485015260248401525af18015620001795762000144575b5050600555516112cd90816200021e8239f35b816200016892903d1062000171575b6200015f8183620001b4565b81019062000203565b50388062000131565b503d62000153565b84513d85823e3d90fd5b6200019d90873d891162000171576200015f8183620001b4565b50386200010a565b88513d89823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001d857604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001af57565b90816020910312620001af57518015158103620001af579056fe6080604052600436101561001257600080fd5b60003560e01c80634623c91d14610d4e5780636077779514610d22578063715018a614610cdb57806379dfe40c14610c8f5780638da5cb5b14610c66578063c5ab224114610c48578063c9d4623f14610c1f578063e0d61b0714610bf6578063e93ae81c146107db578063f2fde38b1461072c578063f755034114610315578063f887ea40146102ec578063fa52c7d8146102ad5763facd269e146100b657600080fd5b346102375760c0366003190112610237576100cf610df9565b6100d7610de3565b608435906001600160401b038211610237576100fa61013f923690600401610e09565b6002546001600160a01b0395919390861692919061011c60a435606435610e8e565b60405180956323b872dd60e01b82528160008160209b8c96303360048501610ee1565b03925af1938415610243578694610278575b506000876001541692610182604051978896879586946308745dd160e01b8652606435916044359160048801610f03565b03925af190811561024357829161024f575b505060a43561019f57005b8060049260015416604051938480926360beed9560e11b82525afa91821561024357600092610201575b5060008051602061125883398151915290826000526006815260406000206101f460a4358254610e8e565b905560405160a4358152a2005b9080925081813d831161023c575b6102198183610eb1565b810103126102375751906000805160206112588339815191526101c9565b600080fd5b503d61020f565b6040513d6000823e3d90fd5b813d8311610271575b6102628183610eb1565b81010312610237578038610194565b503d610258565b9384813d83116102a6575b61028d8183610eb1565b810103126102375761029f8694610ed4565b5038610151565b503d610283565b34610237576020366003190112610237576001600160a01b036102ce610dcd565b166000526004602052602060ff604060002054166040519015158152f35b34610237576000366003190112610237576003546040516001600160a01b039091168152602090f35b34610237576101003660031901126102375761032f610df9565b610337610de3565b906084356001600160401b03811161023757610357903690600401610e09565b9160c4359360018060a01b0385168095036102375761039b602061037f60a435606435610e8e565b604051809381926323b872dd60e01b8352303360048501610ee1565b038160008a5af18015610243576106f3575b5060405194608086016001600160401b0381118782101761066b576040526003865260603660208801378551156106a357602086015260018060a01b03600354166040516315ab88c960e31b8152602081600481855afa908115610243576000916106b9575b508651600110156106a3576001600160a01b03908116604088015260028054885192169111156106a357606087015261045060a435606435610e8e565b604051968791634401edf760e11b835260a4830190600484015260e435602484015260a060448401528151809152602060c4840192019060005b818110610681575050509181600081819530606483015242608483015203925af18015610243576105d6575b6020939450600060018060a01b0360015416926104f1604051978896879586946308745dd160e01b8652606435916044359160048801610f03565b03925af18015610243576105ab575b5060a43561050a57005b6001546040516360beed9560e11b815290602090829060049082906001600160a01b03165afa90811561024357600091610579575b50806000526006602052604060002061055b60a4358254610e8e565b9055600080516020611258833981519152602060405160a4358152a2005b90506020813d6020116105a3575b8161059460209383610eb1565b8101031261023757518161053f565b3d9150610587565b602090813d83116105cf575b6105c18183610eb1565b810103126102375780610500565b503d6105b7565b3d806000873e6105e68187610eb1565b850194602081870312610237578051906001600160401b03821161023757019480601f87011215610237578551956001600160401b03871161066b576020808860051b986040519061063a838c0183610eb1565b8152019782010191821161023757602001955b81871061065b5750506104b6565b865181526020968701960161064d565b634e487b7160e01b600052604160045260246000fd5b82516001600160a01b031684528a94506020938401939092019160010161048a565b634e487b7160e01b600052603260045260246000fd5b90506020813d6020116106eb575b816106d460209383610eb1565b81010312610237576106e590610f4f565b87610413565b3d91506106c7565b6020813d602011610724575b8161070c60209383610eb1565b810103126102375761071d90610ed4565b50856103ad565b3d91506106ff565b3461023757602036600319011261023757610745610dcd565b61074d610e36565b6001600160a01b03908116908115610787576000548260018060a01b031982161760005516600080516020611278833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461023757604036600319011261023757602480356001600160401b0381116102375736602382011215610237576001600160401b03600482013511610237573682826004013560051b8301011161023757600554816004013510610be4576001546040516375c7050960e01b80825260048035908301526001600160a01b0390921691906000818681865afa90811561024357600091610bc9575b50516001600160a01b03163303610b48575b6000908460405180948193825260043560048301525afa801561024357606091600091610b25575b5001516040516108de602082816108d18183019687815193849201610f7e565b8101038084520182610eb1565b519020600090815b836004013583106109cb5784602060018060a01b036002541691600435600052600682526044604060002054916000604051958694859363a9059cbb60e01b85523360048601528401525af1801561024357610992575b600435600052600660205260406000205460405190815233907f8c8fb16c3fff3e9353f4a39b33dd9e38ba88594f8c66defbff2048265738780b602060043592a3600435600090815260066020526040812055005b6020813d6020116109c3575b816109ab60209383610eb1565b81010312610237576109bc90610ed4565b508061093d565b3d915061099e565b6109dc838560040135878701611063565b35906001600160a01b0382168203610237576001600160a01b0382811691161015610b13576001600160a01b03811660009081526004602052604090205460ff1615610b0157610a33838560040135878701611063565b602081013590601e198136030182121561023757016001600160401b038135116102375780353603602082011361023757610a6e8135610f63565b90610a7c6040519283610eb1565b8035825236602082358301011161023757610ab5916000602083610aad94358282018386013735830101528461119a565b919091611085565b6001600160a01b03828116911603610aef57916000198114610ada57600101916108e6565b84634e487b7160e01b60005260116004526000fd5b604051638baa579f60e01b8152600490fd5b604051631a0a9b9f60e21b8152600490fd5b60405163a7781cbb60e01b8152600490fd5b610b4291503d806000833e610b3a8183610eb1565b810190610fa1565b846108b1565b60405181815260043560048201526000818681865afa801561024357603c91600091610bae575b50602001516001600160401b0390811691909101908111610ada57426001600160401b03909116101561088957604051631a0a745560e11b8152600490fd5b610bc391503d806000833e610b3a8183610eb1565b86610b6f565b610bde91503d806000833e610b3a8183610eb1565b85610877565b604051633724e34360e11b8152600490fd5b34610237576000366003190112610237576002546040516001600160a01b039091168152602090f35b34610237576000366003190112610237576001546040516001600160a01b039091168152602090f35b34610237576000366003190112610237576020600554604051908152f35b34610237576000366003190112610237576000546040516001600160a01b039091168152602090f35b34610237576020366003190112610237577fbcfae85be40ac3606c557faf143ce6b08c7d99137b0c98eff034fddc6926c31b6020600435610cce610e36565b80600555604051908152a1005b3461023757600036600319011261023757610cf4610e36565b600080546001600160a01b0319811682556001600160a01b03166000805160206112788339815191528280a3005b346102375760203660031901126102375760043560005260066020526020604060002054604051908152f35b3461023757604036600319011261023757610d67610dcd565b602435908115158092036102375760207f6b3b7d0d26ec99d080840dca1323c7147d1868adc66a4290afb8101d7908320d91610da1610e36565b60018060a01b0316928360005260048252604060002060ff1981541660ff8316179055604051908152a2005b600435906001600160a01b038216820361023757565b602435906001600160a01b038216820361023757565b6004359060ff8216820361023757565b9181601f84011215610237578235916001600160401b038311610237576020838186019501011161023757565b6000546001600160a01b03163303610e4a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b91908201809211610e9b57565b634e487b7160e01b600052601160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761066b57604052565b5190811515820361023757565b6001600160a01b03918216815291166020820152604081019190915260600190565b9491928694919360ff60c0989516875260018060a01b031660208701526040860152606085015260a060808501528160a0850152848401376000828201840152601f01601f1916010190565b51906001600160a01b038216820361023757565b6001600160401b03811161066b57601f01601f191660200190565b60005b838110610f915750506000910152565b8181015183820152602001610f81565b90602080838303126102375782516001600160401b03938482116102375701926080848403126102375760405193608085018581108382111761066b57604052610fea81610f4f565b8552828101518281168103610237578386015261100960408201610ed4565b60408601526060810151918211610237570182601f820112156102375780519061103282610f63565b936110406040519586610eb1565b828552838383010111610237578261105b9385019101610f7e565b606082015290565b91908110156106a35760051b81013590603e1981360301821215610237570190565b600581101561118457806110965750565b600181036110de5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b6002810361112b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60031461113457565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9060418151146000146111c8576111c4916020820151906060604084015193015160001a906111d2565b9091565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831161124b5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561123e5781516001600160a01b03811615611238579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fe19d4213c1f22deb153156be5bf9eee8fe77c36a557d83434b8cbb543fc034d6a8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212203e914f65e70af0de1d18d67175b4e00152c4c627ef7cab00eba07e959b93bc7464736f6c63430008130033";

type ArbiusRouterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbiusRouterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbiusRouterV1__factory extends ContractFactory {
  constructor(...args: ArbiusRouterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbiusRouterV1> {
    return super.deploy(
      engine_,
      arbius_,
      router_,
      overrides || {}
    ) as Promise<ArbiusRouterV1>;
  }
  override getDeployTransaction(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      engine_,
      arbius_,
      router_,
      overrides || {}
    );
  }
  override attach(address: string): ArbiusRouterV1 {
    return super.attach(address) as ArbiusRouterV1;
  }
  override connect(signer: Signer): ArbiusRouterV1__factory {
    return super.connect(signer) as ArbiusRouterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbiusRouterV1Interface {
    return new utils.Interface(_abi) as ArbiusRouterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbiusRouterV1 {
    return new Contract(address, _abi, signerOrProvider) as ArbiusRouterV1;
  }
}
