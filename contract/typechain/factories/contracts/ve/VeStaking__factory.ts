/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VeStaking,
  VeStakingInterface,
} from "../../../contracts/ve/VeStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_votingEscrow",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "BalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "emergency",
        type: "bool",
      },
    ],
    name: "EmergencySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "_updateBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_emergency",
        type: "bool",
      },
    ],
    name: "setEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_engine",
        type: "address",
      },
    ],
    name: "setEngine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "newAmounts",
        type: "uint256[]",
      },
    ],
    name: "setMultipleBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEscrow",
    outputs: [
      {
        internalType: "contract IVotingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ca57601f6115c338819003918201601f19168301916001600160401b038311848410176100cf5780849260409485528339810103126100ca57610052602061004b836100e5565b92016100e5565b60008054336001600160a01b0319808316821784556040519590946001600160a01b03949093859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a362093a8060065516836001541617600155169060025416176002556114c990816100fa8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ca5756fe6040608081526004908136101561001557600080fd5b600091823560e01c80630501d556146110285780630e830e4914610fe357806318160ddd14610fc45780631c1f78eb14610fa75780631c4b774b14610d03578063386a952514610ce45780633c6b16ab14610ac45780634a4b9feb14610a325780634d6ed8c414610a125780634f2bfe5b146109e957806361dc2c36146108f2578063715018a6146108a75780637b0a47ee1461088857806380faa57d1461086b5780638980f11f1461079c5780638da5cb5b146107745780639cc7f7081461074d578063a329179c146105df578063ac6a2b5d14610520578063c8f33c9114610501578063c9d4623f146104d8578063caa6fea4146104b1578063cc1a378f146103cf578063cd3daf9d146103ab578063d0779da814610384578063d1af0c7d1461035b578063dad3aab614610290578063df136d651461026d578063ebe2b12b14610250578063f2fde38b146101a05763f301af421461017657600080fd5b3461019c57602036600319011261019c576020928291358152600a845220549051908152f35b8280fd5b503461019c57602036600319011261019c576101ba611094565b906101c36110f5565b6001600160a01b039182169283156101fe57505082546001600160a01b0319811683178455166000805160206114748339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b503461019c578260031936011261019c5760209250549051908152f35b50503461028c578160031936011261028c576020906008549051908152f35b5080fd5b50503461028c577ffa03b6304af61f28308225e213bf003207602328c0dad9495c9b2d61eec74f456102c1366110af565b6102d960018060a09694961b0360025416331461128d565b6102e16113ab565b6008556102ec611399565b60075583610335575b838552600c60205281852054906103178161031284600b54611308565b6112e5565b600b55848652600c602052808387205582519182526020820152a280f35b61033e84611405565b848652600a602052828620556008546009602052828620556102f5565b50503461028c578160031936011261028c5760015490516001600160a01b039091168152602090f35b503461019c57602036600319011261019c5760209282913581526009845220549051908152f35b50503461028c578160031936011261028c576020906103c86113ab565b9051908152f35b50903461019c57602036600319011261019c578135916103ed6110f5565b80544211156104285750816020917ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39360065551908152a180f35b602060a492519162461bcd60e51b8352820152605860248201527f50726576696f7573207265776172647320706572696f64206d7573742062652060448201527f636f6d706c657465206265666f7265206368616e67696e672074686520647572606482015277185d1a5bdb88199bdc881d1a19481b995dc81c195c9a5bd960421b6084820152fd5b50503461028c578160031936011261028c5760209060ff60035460a01c1690519015158152f35b50503461028c578160031936011261028c5760035490516001600160a01b039091168152602090f35b50503461028c578160031936011261028c576020906007549051908152f35b503461019c576020806003193601126105db577f0c875c8d391179c5cf7ad8303d268efd50b8beb78b671f85cd54bfb91eb8ef4091359261056c60018060a01b0360025416331461128d565b6105746113ab565b60085561057f611399565b600755836105b7575b838552600c825280852054906105a082600b54611308565b600b55848652600c8352858181205551908152a280f35b6105c084611405565b848652600a8352818620556008546009835281862055610588565b8380fd5b50903461019c578060031936011261019c576001600160401b039180358381116107495761061090369083016110c5565b909260249485359081116107455761062b90369085016110c5565b90926106356110f5565b81810361070357875b818110610649578880f35b610654818389611348565b35610660828588611348565b359061066a6110f5565b87546106bd57808b52600c90602090828252878d205461069185610312600b938454611308565b90558c5252848a205560001981146106ab5760010161063e565b634e487b7160e01b8952601186528789fd5b855162461bcd60e51b81526020818a0152602d818c015260008051602061145483398151915260448201526c081a185d99481cdd185c9d1959609a1b6064820152608490fd5b825162461bcd60e51b81526020818701819052818901527f417272617973206d7573742068617665207468652073616d65206c656e6774686044820152606490fd5b8680fd5b8480fd5b503461019c57602036600319011261019c576020928291358152600c845220549051908152f35b50503461028c578160031936011261028c57905490516001600160a01b039091168152602090f35b503461019c578160031936011261019c576107b5611094565b6107e1602060243580946107c76110f5565b865163a9059cbb60e01b8152938492839233908401611186565b0381886001600160a01b0387165af18015610861579361082d917f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa2895610833575b505192839283611186565b0390a180f35b6108539060203d811161085a575b61084b818361114d565b8101906111a1565b5038610822565b503d610841565b84513d87823e3d90fd5b50503461028c578160031936011261028c576020906103c8611399565b50503461028c578160031936011261028c576020906005549051908152f35b83346108ef57806003193601126108ef576108c06110f5565b80546001600160a01b03198116825581906001600160a01b03166000805160206114748339815191528280a380f35b80fd5b50903461019c57610902366110af565b91909261091a60018060a01b0360025416331461128d565b6109226113ab565b60085561092d611399565b600755836109c3575b821561099057508160209161096e7f925435fa7e37e5d9555bb18ce0d62bb9627d0846942e58e5291e9a2dded462ed94600b546112e5565b600b55848652600c83528086206109868382546112e5565b905551908152a280f35b6020606492519162461bcd60e51b8352820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152fd5b6109cc84611405565b848652600a60205282862055600854600960205282862055610936565b50503461028c578160031936011261028c5760025490516001600160a01b039091168152602090f35b5091346108ef5760203660031901126108ef57506103c860209235611405565b50903461019c57610a42366110af565b92610a4b6110f5565b8054610a7d5750808452600c602052610a6d8361031284872054600b54611308565b600b558352600c60205282205580f35b608490602084519162461bcd60e51b8352820152602d602482015260008051602061145483398151915260448201526c081a185d99481cdd185c9d1959609a1b6064820152fd5b5082903461028c576020908160031936011261019c57600354813591906001600160a01b0390811633148015610cd8575b15610c8657610b026113ab565b60085581549084428311610c525750905062093a8080610b24600654426112e5565b04818102918183041490151715610c3f579084610b478360249486554290611308565b91610b528387611328565b6005555b42600755600154168851938480926370a0823160e01b825230888301525afa918215610c35578692610c00575b50610b919060055492611328565b10610bc257507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d929351908152a180f35b845162461bcd60e51b815290810183905260186024820152770a0e4deecd2c8cac840e4caeec2e4c840e8dede40d0d2ced60431b6044820152606490fd5b9091508481813d8311610c2e575b610c18818361114d565b81010312610c2a575190610b91610b83565b8580fd5b503d610c0e565b87513d88823e3d90fd5b634e487b7160e01b865260118352602486fd5b610c5f6024934290611308565b91610c7e83610c79610c7360055483611315565b896112e5565b611328565b600555610b56565b855162461bcd60e51b8152808301859052602660248201527f43616c6c6572206973206e6f7420656e67696e6520636f6e7472616374206f726044820152651037bbb732b960d11b6064820152608490fd5b50808554163314610af5565b50503461028c578160031936011261028c576020906006549051908152f35b503461019c57602090816003193601126105db57803592610d226113ab565b600855610d2d611399565b60075583610f83575b60025481516331a9108f60e11b81528084018690526001600160a01b03939185908290602490829088165afa908115610f79578791610f43575b50858752600a8552828720938785549586610d89575080f35b5560ff60035460a01c1615610d9c578780f35b60015416835180610dbe878983019563a9059cbb60e01b875260248401611186565b0391610dd2601f199384810184528361114d565b8551936001600160401b039285880184811187821017610f305788528986527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564868b0152518b9182919082855af1913d15610f20573d908111610f0d5790610e5794939291610e4a8a895195601f840116018561114d565b83523d8b8a85013e6111b9565b805190858215928315610ef5575b50505015610ea15750519081527f4d7828f2aa36030cc63cdea79ec646099aa121d019f1a90edb55078939fb84ea9190a2388080808080808780f35b83608492519162461bcd60e51b8352820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b610f0593508201810191016111a1565b388581610e65565b634e487b7160e01b8b526041865260248bfd5b5090610e579392506060916111b9565b634e487b7160e01b8d526041885260248dfd5b90508481813d8311610f72575b610f5a818361114d565b81010312610745575183811681036107455738610d70565b503d610f50565b83513d89823e3d90fd5b610f8c84611405565b848652600a8452818620556008546009845281862055610d36565b50503461028c578160031936011261028c576020906103c861136e565b50503461028c578160031936011261028c57602090600b549051908152f35b83346108ef5760203660031901126108ef57610ffd611094565b6110056110f5565b600380546001600160a01b0319166001600160a01b039290921691909117905580f35b503461019c57602036600319011261019c57359081151580920361019c577fd3c65300450bb894b91be71a61ac294dbf255f6b1dd2478befd6c56d54d1f641916020916110736110f5565b6003805460ff60a01b191660a084901b60ff60a01b1617905551908152a180f35b600435906001600160a01b03821682036110aa57565b600080fd5b60409060031901126110aa576004359060243590565b9181601f840112156110aa578235916001600160401b0383116110aa576020808501948460051b0101116110aa57565b6000546001600160a01b0316330361110957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601f909101601f19168101906001600160401b0382119082101761117057604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b039091168152602081019190915260400190565b908160209103126110aa575180151581036110aa5790565b9192901561121b57508151156111cd575090565b3b156111d65790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561122e5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611274575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611251565b1561129457565b60405162461bcd60e51b815260206004820152602360248201527f43616c6c6572206973206e6f7420566f74696e67457363726f7720636f6e74726044820152621858dd60ea1b6064820152608490fd5b919082018092116112f257565b634e487b7160e01b600052601160045260246000fd5b919082039182116112f257565b818102929181159184041417156112f257565b8115611332570490565b634e487b7160e01b600052601260045260246000fd5b91908110156113585760051b0190565b634e487b7160e01b600052603260045260246000fd5b60045442811161137e5750600090565b61139690611390600554914290611308565b90611315565b90565b60045480421060001461139657504290565b600b5480156113fe576008546113d16005546113906113c8611399565b60075490611308565b670de0b6b3a7640000908181029181830414901517156112f257611396926113f891611328565b906112e5565b5060085490565b6113969060406000828152600c602052670de0b6b3a7640000611442838320546113906114306113ab565b87865260096020528686205490611308565b04928152600a6020522054906112e556fe43616e6e6f74207365742062616c616e636520616674657220726577617264738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122093afd7a7542a424e2ef3696bbe5d9a1c249dc57600d168ecf99842c54ff53bfe64736f6c63430008130033";

type VeStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeStaking__factory extends ContractFactory {
  constructor(...args: VeStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardsToken: PromiseOrValue<string>,
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeStaking> {
    return super.deploy(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    ) as Promise<VeStaking>;
  }
  override getDeployTransaction(
    _rewardsToken: PromiseOrValue<string>,
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsToken,
      _votingEscrow,
      overrides || {}
    );
  }
  override attach(address: string): VeStaking {
    return super.attach(address) as VeStaking;
  }
  override connect(signer: Signer): VeStaking__factory {
    return super.connect(signer) as VeStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeStakingInterface {
    return new utils.Interface(_abi) as VeStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VeStaking {
    return new Contract(address, _abi, signerOrProvider) as VeStaking;
  }
}
