/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ArbiusRouterV1,
  ArbiusRouterV1Interface,
} from "../../contracts/ArbiusRouterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "engine_",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbius_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValidator",
    type: "error",
  },
  {
    inputs: [],
    name: "SignersNotSorted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmitTaskFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TimeNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "IncentiveClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minValidators",
        type: "uint256",
      },
    ],
    name: "MinValidatorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ValidatorSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "addIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "arbius",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
    ],
    name: "claimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskid_",
        type: "bytes32",
      },
    ],
    name: "emergencyClaimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "engine",
    outputs: [
      {
        internalType: "contract IArbius",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "incentives",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minValidators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiver",
    outputs: [
      {
        internalType: "contract SwapReceiver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minValidators_",
        type: "uint256",
      },
    ],
    name: "setMinValidators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status_",
        type: "bool",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTask",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTaskWithETH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "model_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "fee_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "input_",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "incentive_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountInMax_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gas_",
        type: "uint256",
      },
    ],
    name: "submitTaskWithToken",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "uniswapApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Signature[]",
        name: "sigs_",
        type: "tuple[]",
      },
    ],
    name: "validateSignatures",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060409080825234620001c95760808162001d848038038091620000258285620001ce565b833981010312620001c9576200003b8162000208565b906020906200004c82820162000208565b6200006760606200005f87850162000208565b930162000208565b600080546001600160a01b0319808216339081178455895193989495946001600160a01b03949385928392839283929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08f80a31696878560015416176001551697888460025416176002551695868360035416176003551690600454161760045563095ea7b360e01b92838252600482015285816044818a600019998a60248401525af18015620001bf576044928795949289926200019d575b5060025416895196879586948552600485015260248401525af1801562000193576200015e575b505060065551611b4c9081620002388239f35b816200018292903d106200018b575b620001798183620001ce565b8101906200021d565b5038806200014b565b503d6200016d565b84513d85823e3d90fd5b620001b790873d89116200018b57620001798183620001ce565b503862000124565b88513d89823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620001f257604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001c957565b90816020910312620001c957518015158103620001c9579056fe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c80631cec43ba146110ed578063297035b3146110935780634623c91d1461101457806351cff8d914610f1d5780636077779514610ef3578063715018a614610eab578063739edcbe1461094657806379dfe40c146108f85780638da5cb5b146108d157806391067f9014610833578063b286780514610818578063c5ab2241146107fa578063c9d4623f146107d1578063d7f332b6146106f4578063e086e5ec146106c6578063e0d61b071461069d578063e93ae81c14610454578063f2fde38b146103a3578063f7260d3e1461037a578063f887ea4014610351578063fa52c7d8146103125763fb53f5b114610119575061000e565b3461030f5780806101293661145a565b95929098969493602061016860018060a01b036002541661014a8d85611626565b6040519b8c809481936323b872dd60e01b8352303360048501611649565b03925af19788156103045789986102ae575b506101b392889594926101a592604051968795602087019a6308745dd160e01b8c526024880161166b565b03601f198101835282611590565b60018060a01b0360015416905193f16101ca6115f6565b501561029c576001546040516360beed9560e11b81529290602090849060049082906001600160a01b03165afa92831561028f578193610255575b509181602093829361021d575b505050604051908152f35b600080516020611ad783398151915291604082858894526007845220610244828254611626565b9055604051908152a2803880610212565b92506020833d602011610287575b8161027060209383611590565b81010312610282576020925192610205565b600080fd5b3d9150610263565b50604051903d90823e3d90fd5b6040516335541d8d60e21b8152600490fd5b90929750602094939194813d6020116102fc575b816102cf60209383611590565b810103126102f857889788956101b3946102eb6101a5946115b3565b509250929495509261017a565b8880fd5b3d91506102c2565b6040513d8b823e3d90fd5b80fd5b503461030f57602036600319011261030f5760209060ff906040906001600160a01b0361033d611417565b168152600584522054166040519015158152f35b503461030f578060031936011261030f576003546040516001600160a01b039091168152602090f35b503461030f578060031936011261030f576004546040516001600160a01b039091168152602090f35b503461030f57602036600319011261030f576103bd611417565b6103c561150a565b6001600160a01b03908116908115610400576000548260018060a01b031982161760005516600080516020611af7833981519152600080a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461030f57610463366114ba565b90929160018060a01b0380600154169284806040519560209682888201916375c7050960e01b83528860248201526024815261049e81611575565b51925af1506104ab6115f6565b95865187016080888783019203126106995785880151978489168099036106955760408101516001600160401b039182821691829003610691576104f1606082016115b3565b5060808101519083821161068d57019983603f8c01121561069157888b01519a61051a8c6115db565b946105286040519687611590565b8c865260408d8301011161068d578a5b8c81106106795750508989819c86010152330361062f575b505061059592869492828661056894519101206117cd565b6002541683865260078352604086205460405196878094819363a9059cbb60e01b835233600484016115c0565b03925af18015610624576105eb575b600792508084528282526040842054604051908152817f8c8fb16c3fff3e9353f4a39b33dd9e38ba88594f8c66defbff2048265738780b843393a383525280604081205580f35b8183813d831161061d575b6106008183611590565b81010312610619576106136007936115b3565b506105a4565b8380fd5b503d6105f6565b6040513d86823e3d90fd5b603c9192985094929394018181116106655716421061065357919086953880610550565b604051631a0a745560e11b8152600490fd5b634e487b7160e01b89526011600452602489fd5b818101604001518682018c01528a01610538565b8a80fd5b8980fd5b8780fd5b8680fd5b503461030f578060031936011261030f576002546040516001600160a01b039091168152602090f35b503461030f578060031936011261030f576106df61150a565b8080808047335af1506106f06115f6565b5080f35b503461030f57604036600319011261030f5760043560243560018060a01b03600254166040519182916323b872dd60e01b8352602092839181888161073e87303360048501611649565b03925af180156107c657610780575b600080516020611ad783398151915292508385526007825260408520610774828254611626565b9055604051908152a280f35b8183813d83116107bf575b6107958183611590565b810103126107bb576107b5600080516020611ad7833981519152936115b3565b5061074d565b8480fd5b503d61078b565b6040513d87823e3d90fd5b503461030f578060031936011261030f576001546040516001600160a01b039091168152602090f35b503461030f578060031936011261030f576020600654604051908152f35b503461030f5761083061082a366114ba565b916117cd565b80f35b503461030f57602036600319011261030f578060206001600160a01b0360448161085b611417565b60035460405163095ea7b360e01b8152941660048501526000196024850152929485938492165af180156108c657610891575080f35b6020813d82116108be575b816108a960209383611590565b810103126108ba576106f0906115b3565b5080fd5b3d915061089c565b6040513d84823e3d90fd5b503461030f578060031936011261030f57546040516001600160a01b039091168152602090f35b503461030f57602036600319011261030f577fbcfae85be40ac3606c557faf143ce6b08c7d99137b0c98eff034fddc6926c31b602060043561093861150a565b80600655604051908152a180f35b503461030f5761012036600319011261030f5760ff6004351660043503610282576024356001600160a01b0381169003610282576001600160401b03608435818111610da25761099a90369060040161142d565b60c43592916001600160a01b0384168403610282576040516323b872dd60e01b8152602081806109d160e435303360048501611649565b0381896001600160a01b038a165af18015610ddf57610e72575b50604051926080840190811184821017610e5c576040526003835260603660208501376001600160a01b038416610a21846116b7565b526003546040516315ab88c960e31b81526001600160a01b039091169390602081600481885afa908115610e51578791610e22575b50610a60826116c4565b6001600160a01b039182169052600280548351921695911115610e0c57610ad887959186926060850152610a9860a435606435611626565b938360018060a01b03600454169560405196879586948593634401edf760e11b8552600485015260e435602485015260a0604485015260a484019061176e565b906064830152600019608483015203925af1801561062457610dea575b50600480546002546040516370a0823160e01b81526001600160a01b03928316938101849052929492911690602081602481855afa908115610ddf578691610daa575b50843b15610da657610b6394869283604051809881958294635705ae4360e01b8452600484016115c0565b03925af1928315610624578493610d88575b5090610bb6610ba89260405193849160208301946308745dd160e01b86526064356044356024356004356024880161166b565b03601f198101845283611590565b60015491519183906001600160a01b031661010435f1610bd46115f6565b501561029c576001546040516360beed9560e11b81529190602090839060049082906001600160a01b03165afa918215610d7d578392610d49575b5060a435610d0e575b6040516370a0823160e01b81523060048201526020816024816001600160a01b0386165afa908115610624578491610cdc575b5080610c5d575b602083604051908152f35b610c82849260209260405196878094819363a9059cbb60e01b835233600484016115c0565b03926001600160a01b03165af1801561028f57610ca0575b80610c52565b6020833d602011610cd4575b81610cb960209383611590565b8101031261030f5750610ccd6020926115b3565b5038610c9a565b3d9150610cac565b90506020813d602011610d06575b81610cf760209383611590565b81010312610282575138610c4b565b3d9150610cea565b818352600760205260408320610d2760a4358254611626565b905581600080516020611ad7833981519152602060405160a4358152a2610c18565b9091506020813d602011610d75575b81610d6560209383611590565b8101031261028257519038610c0f565b3d9150610d58565b6040513d85823e3d90fd5b610d959093919293611562565b610da25790829138610b75565b8280fd5b8580fd5b9550506020853d602011610dd7575b81610dc660209383611590565b810103126102825786945138610b38565b3d9150610db9565b6040513d88823e3d90fd5b610e05903d8086833e610dfd8183611590565b8101906116f3565b5038610af5565b634e487b7160e01b600052603260045260246000fd5b610e44915060203d602011610e4a575b610e3c8183611590565b8101906116d4565b38610a56565b503d610e32565b6040513d89823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b6020813d602011610ea3575b81610e8b60209383611590565b81010312610da657610e9c906115b3565b50386109eb565b3d9150610e7e565b503461030f578060031936011261030f57610ec461150a565b600080546001600160a01b0319811682556001600160a01b0316600080516020611af78339815191528280a380f35b503461030f57602036600319011261030f5760406020916004358152600783522054604051908152f35b503461030f576020806003193601126108ba57610f38611417565b90610f4161150a565b6040516370a0823160e01b81523060048201526001600160a01b03928316928282602481875afa9182156107c6578592610fe3575b5090610f9e9383928654168660405180978195829463a9059cbb60e01b8452600484016115c0565b03925af18015610d7d57610fb0578280f35b81813d8311610fdc575b610fc48183611590565b810103126108ba57610fd5906115b3565b5038808280f35b503d610fba565b91508282813d831161100d575b610ffa8183611590565b8101031261028257905190610f9e610f76565b503d610ff0565b503461030f57604036600319011261030f5761102e611417565b60243590811515809203610da25760207f6b3b7d0d26ec99d080840dca1323c7147d1868adc66a4290afb8101d7908320d9161106861150a565b6001600160a01b0316808552600582526040808620805460ff191660ff87161790555193845292a280f35b503461030f57806020806003193601126110ea576004356110b261150a565b8161059560018060a01b036002541683865260078352604086205460405196878094819363a9059cbb60e01b835233600484016115c0565b50fd5b506110f73661145a565b949261110a989692919794986080611575565b600260805260403660a0376003546040516315ab88c960e31b81526001600160a01b0390911690602081600481855afa9081156103045789916113f8575b5061115360806116b7565b6001600160a01b0391821690526002541661116e60806116c4565b528761117a8a8c611626565b60018060a01b036004541692604051808095819463fb3bdb4160e01b83526004830152608060248301526111b260848301608061176e565b9060448301526000196064830152039134905af18015611394576113de575b50600480546002546040516370a0823160e01b81526001600160a01b039283169381018490529b92911660208c602481845afa9b8c156113d3578a9c61139f575b50813b15610691579a899161123f9b9c83604051809e81958294635705ae4360e01b8452600484016115c0565b03925af1801561139457611371575b879850926101a5889796959361127e938996604051968795602087019a6308745dd160e01b8c526024880161166b565b60018060a01b0360015416905193f16112956115f6565b501561029c576001546040516360beed9560e11b81529190602090839060049082906001600160a01b03165afa91821561028f57819261133a575b508183602094611303575b5050476112ec575b50604051908152f35b80808047335af1506112fc6115f6565b50386112e3565b84600080516020611ad783398151915291838552600782526040852061132a828254611626565b9055604051908152a281386112db565b9291506020833d602011611369575b8161135660209383611590565b81010312610282576020925191926112d0565b3d9150611349565b9261127e9196959492976113876101a59a611562565b979294959691509261124e565b6040513d8a823e3d90fd5b909b506020813d6020116113cb575b816113bb60209383611590565b8101031261069157519a38611212565b3d91506113ae565b6040513d8c823e3d90fd5b6113f1903d808a833e610dfd8183611590565b50386111d1565b611411915060203d602011610e4a57610e3c8183611590565b38611148565b600435906001600160a01b038216820361028257565b9181601f84011215610282578235916001600160401b038311610282576020838186019501011161028257565b60e06003198201126102825760043560ff8116810361028257916024356001600160a01b038116810361028257916044359160643591608435906001600160401b038211610282576114ae9160040161142d565b909160a4359060c43590565b604060031982011261028257600435916001600160401b03916024359083821161028257806023830112156102825781600401359384116102825760248460051b83010111610282576024019190565b6000546001600160a01b0316330361151e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160401b038111610e5c57604052565b606081019081106001600160401b03821117610e5c57604052565b601f909101601f19168101906001600160401b03821190821017610e5c57604052565b5190811515820361028257565b6001600160a01b039091168152602081019190915260400190565b6001600160401b038111610e5c57601f01601f191660200190565b3d15611621573d90611607826115db565b916116156040519384611590565b82523d6000602084013e565b606090565b9190820180921161163357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918216815291166020820152604081019190915260600190565b9491928694919360ff60c0989516875260018060a01b031660208701526040860152606085015260a060808501528160a0850152848401376000828201840152601f01601f1916010190565b805115610e0c5760200190565b805160011015610e0c5760400190565b9081602091031261028257516001600160a01b03811681036102825790565b9060209081838203126102825782516001600160401b0393848211610282570181601f82011215610282578051938411610e5c578360051b906040519461173c85840187611590565b85528380860192820101928311610282578301905b82821061175f575050505090565b81518152908301908301611751565b90815180825260208080930193019160005b82811061178e575050505090565b83516001600160a01b031685529381019392810192600101611780565b9190811015610e0c5760051b81013590603e1981360301821215610282570190565b919060065482106118ff576000805b8382106117ea575050505050565b6117f58285856117ab565b35906001600160a01b039081831690818403610282578282911610156118ed57806000526020916005835260409260ff846000205416156118dc5761183b8689896117ab565b8181013590601e198136030182121561028257018035906001600160401b03821161028257828101823603811361028257611875836115db565b9161188288519384611590565b838352848436920101116102825783836118aa946000936118b297860137830101528a611a26565b919091611911565b16036118cc575090600019811461163357600101906117dc565b51638baa579f60e01b8152600490fd5b8351631a0a9b9f60e21b8152600490fd5b60405163a7781cbb60e01b8152600490fd5b604051633724e34360e11b8152600490fd5b6005811015611a1057806119225750565b6001810361196a5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606490fd5b600281036119b75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003146119c057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b906041815114600014611a5457611a50916020820151906060604084015193015160001a90611a5e565b9091565b5050600090600290565b9291906fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311611aca5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561028f5781516001600160a01b03811615611ac4579190565b50600190565b5050505060009060039056fe19d4213c1f22deb153156be5bf9eee8fe77c36a557d83434b8cbb543fc034d6a8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220ceb8654e34eaf38d095ff2662401b76f6c69252d357e4d7820f1f8ee73fae96764736f6c63430008130033";

type ArbiusRouterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbiusRouterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbiusRouterV1__factory extends ContractFactory {
  constructor(...args: ArbiusRouterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    receiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbiusRouterV1> {
    return super.deploy(
      engine_,
      arbius_,
      router_,
      receiver_,
      overrides || {}
    ) as Promise<ArbiusRouterV1>;
  }
  override getDeployTransaction(
    engine_: PromiseOrValue<string>,
    arbius_: PromiseOrValue<string>,
    router_: PromiseOrValue<string>,
    receiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      engine_,
      arbius_,
      router_,
      receiver_,
      overrides || {}
    );
  }
  override attach(address: string): ArbiusRouterV1 {
    return super.attach(address) as ArbiusRouterV1;
  }
  override connect(signer: Signer): ArbiusRouterV1__factory {
    return super.connect(signer) as ArbiusRouterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbiusRouterV1Interface {
    return new utils.Interface(_abi) as ArbiusRouterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbiusRouterV1 {
    return new Contract(address, _abi, signerOrProvider) as ArbiusRouterV1;
  }
}
